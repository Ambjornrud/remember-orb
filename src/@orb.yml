version: 2.1

description: |
  A lightweight utility CircleCI orb to persist environment variables across steps in a
  job, or across jobs in a workflow. Based on CircleCI's rememborb: https://circleci.com/orbs/registry/orb/circleci/rememborb
  Requirements: None

display:
  home_url: https://github.com/ambjornrud/remember-orb/wiki
  source_url: https://github.com/ambjornrud/remember-orb

examples:
  standard_usage:
    description: |
      A docker workflow, in which we need to remember the IMAGE_TAG across
      steps and jobs as we build, test, and deploy the image.

    usage:
      version: 2.1
      orbs:
        mem: ambjornrud/remember-orb@x.y.z

      jobs:
        publish_image:
          docker:
            - image: circleci/python:3.7
          steps:
            - mem/remember:
                env_var: IMAGE_TAG
                value: super_cool_image:1.0.$CIRCLE_BUILD_NUM-$CIRCLE_SHA
            - run: docker build -t $IMAGE_TAG .
            - run: docker push $IMAGE_TAG
        test_image:
          docker:
            - image: circleci/python:3.7
          steps:
            - mem/recall:
                env_var: IMAGE_TAG
            - run: docker pull $IMAGE_TAG
            - run: docker run $IMAGE_TAG test_coolness
        deploy_image:
          docker:
            - image: circleci/python:3.7
          steps:
            - mem/recall:
                env_var: IMAGE_TAG
            - run: docker pull $IMAGE_TAG
            - run: some_kubernetes_shenanigans $IMAGE_TAG
      workflows:
        highly_fault_tolerant_delivery:
          jobs:
            - publish_image
            - test_image:
                requires:
                  - publish_image
            - deploy_image:
                requires:
                  - test_image

commands:
  remember:
    description: |
      Exports an environment variable that can be read throughout the remainder
      of this job, and persists the value to be `recall`ed in a downstream job.
    parameters:
      env_var:
        description: The environment variable to set.
        type: string
      value:
        description: The value to save to the variable.
        type: string
    steps:
      - run:
          name: Remember << parameters.env_var >>
          command: |
            export << parameters.env_var >>="<< parameters.value >>"
            exporter="export << parameters.env_var >>=${<< parameters.env_var >>}"
            echo $exporter >> $BASH_ENV
            remember_file="/tmp/circleci_remember/.circleci_remember/<< parameters.env_var >>"
            mkdir -p $(dirname $remember_file)
            echo $exporter >> $remember_file
            echo Remembering << parameters.env_var >> = ${<< parameters.env_var >>}
      - persist_to_workspace:
          # TODO: platform agnostic
          root: /tmp/circleci_remember
          paths:
            - .circleci_remember/<< parameters.env_var >>
  recall:
    description: |
      Recalls an environment variable that was previously `remember`ed, and
      exports it so it can be read throughout the remainder of this job.
    parameters:
      env_var:
        description: The environment variable to recall.
        type: string
    steps:
      - attach_workspace:
          at: /tmp/circleci_remember
      - run:
          name: Recall << parameters.env_var >>
          command: |
            EXPORTER_FILE=/tmp/circleci_remember/.circleci_remember/<< parameters.env_var >>
            if [ -r "$EXPORTER_FILE" ]; then
              exporter=$(cat $EXPORTER_FILE)
            fi

            if [ -z "$exporter" ]; then
              echo Environment variable '<< parameters.env_var >>' not found, please set with remember first.
            else
              $exporter
              echo $exporter >> $BASH_ENV
              echo Recalled << parameters.env_var >> = ${<< parameters.env_var >>}
            fi
